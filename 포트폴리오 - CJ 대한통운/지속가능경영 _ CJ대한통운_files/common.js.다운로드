function fncToday(){

	    today = new Date();
	    this_year=today.getFullYear();
	    this_month=today.getMonth();
	    this_month+=1;
	    if(this_month <10) this_month="0" + this_month;

	    this_day=today.getDate();
	    if(this_day<10) this_day="0" + this_day;

	 montharray=new Array(31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
	 maxdays = montharray[this_month-1];
	 //아래는 윤달을 구하는 것
	 if (this_month==2) {
	     if ((this_year/4)!=parseInt(this_year/4)) maxdays=28;
	     else maxdays=29;
	 }

		var strYear="";
		var strMonth="";
		var strDay="";

		for(var i=this_year;i<this_year+2;i++){//현재 년도에서 미래2년
	        if(i==this_year){
	       	 strYear +="<OPTION VALUE="+i+" selected >"+i+"</option>";

	        }else{
	       	 strYear +="<option value="+i+">"+i+"</option>";
	        }
	    }


		for(var i=1;i<=12;i++){
	        if(i<10){
	            if(i==this_month){
	           	 strMonth +="<OPTION VALUE=0" +i+ " selected >0"+i+"</option>";
	            }else{
	           	 strMonth +="<OPTION VALUE=0" +i+ ">0"+i+"</option>";
	            }
	        }
	        else{
	       	 if(i==this_month){
	           	 strMonth +="<OPTION VALUE=" +i+ " selected >"+i+"</option>";
	            }else{
	           	 strMonth +="<OPTION VALUE=" +i+ ">"+i+"</option>";
	            }
	        }
		}
		for(var i=1;i<=maxdays;i++){
	        if(i<10){
	            if(i==this_day) {
	           	 strDay +="<OPTION VALUE=0" +i+ " selected >0"+i+"</option>";
	            }else{
	           	 strDay +="<OPTION VALUE=0" +i+ ">0"+i+"</option>";
	            }
	        }else{
	            if(i==this_day){
	           	 strDay +="<OPTION VALUE=" +i+ " selected >"+i+"</option>";
	            }else{
	           	 strDay +="<OPTION VALUE=" +i+ ">" +i+"</option>";
	            }
	        }
	   }
		$('.ipt-lb.year').val(this_year);
		$('.ipt-lb.month').val(this_month);
		$('.ipt-lb.day').val(this_day);
		$('.selectYear').html(strYear);
		$('.selectMonth').html(strMonth);
		$('.selectDay').html(strDay);

}

function fncChangeMonth(month){
	var maxdays = 0;
	if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12){
		maxdays = 31;
	}else if(month == 4 || month == 6 || month == 9 || month == 11){
		maxdays = 30;
	}else{
		today = new Date();
	    this_year=today.getFullYear();
	    if((this_year/4)!=parseInt(this_year/4)){
	    	maxdays=28;
	    }else{
	    	maxdays=29;
	    }
	}

	var strDay="";
	for(var i=1;i<=maxdays;i++){
	        if(i<10){
	            if(i==this_day) {
	           	 strDay +="<OPTION VALUE=0" +i+ " selected >0"+i+"</option>";
	            }else{
	           	 strDay +="<OPTION VALUE=0" +i+ ">0"+i+"</option>";
	            }
	        }else{
	            if(i==this_day){
	           	 strDay +="<OPTION VALUE=" +i+ " selected} >"+i+"</option>";
	            }else{
	           	 strDay +="<OPTION VALUE=" +i+ ">" +i+"</option>";
	            }
	        }
	   }
	$('.selectDay').html(strDay);
}

function fncCapsLock(e, id){
	var keyCode = 0;
    var shiftKey = false;
    keyCode = e.keyCode;
    shiftKey = e.shiftKey;
    if (((keyCode >= 65 && keyCode <= 90) && !shiftKey)
            || ((keyCode >= 97 && keyCode <= 122) && shiftKey)) {
    	$('#' + id).tooltip('hide')
        		  .attr('data-original-title', $.i18n.prop('admin.message.10061')  /* CapsLock 키가 켜져 있습니다. */ )
        		  .tooltip('fixTitle')
        		  .tooltip('show');
    } else {
    	$('#' + id).tooltip('hide')
		  		   .attr('data-original-title', '')
		  		   .tooltip('fixTitle')
		  		   .tooltip('show');
    }

}

//비밀번호 유효성 체크
function isValid_passwd( str ) {
	if(str != null && str != ""){
		var patten = new Array();
		var msg = new Array();
		var p;
		var ret_msg = new Array();

		patten["not_eng_num"] =/^[a-zA-Z0-9\!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\＼\]\^\_\`\{\|\}\~]{8,15}$/;
		msg["not_eng_num"] = $.i18n.prop('front.message.10005') /* 영문 대/소문자, 숫자, 특수문자의 8~15자리로 사용가능합니다. */;
		patten["only_num"] = /[a-zA-Z\!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\＼\]\^\_\`\{\|\}\~]/;// 숫자만
		msg["only_num"] = $.i18n.prop('front.message.10006') /* 비밀번호는 8자리 이상은 영문/숫자/특수문자 중 3종류 이상, 10자리 이상은 2종류 이상 혼용하셔야 합니다(숫자만으로는 사용불가). */;
		patten["only_alpha"] = /[0-9\!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\＼\]\^\_\`\{\|\}\~]/; // 영문만
		msg["only_alpha"] = $.i18n.prop('front.message.10007') /* 비밀번호는 8자리 이상은 영문/숫자/특수문자 중 3종류 이상, 10자리 이상은 2종류 이상 혼용하셔야 합니다(영문 대/소문자만으로 사용불가). */;
		patten["only_special"] = /[a-zA-Z0-9]/; // 특수문자만
		msg["only_special"] = $.i18n.prop('front.message.10008') /* 비밀번호는 8자리 이상은 영문/숫자/특수문자 중 3종류 이상, 10자리 이상은 2종류 이상 혼용하셔야 합니다(특수문자만으로 사용불가). */;
		patten["same_4"] = /.{4,}/; // 반복문자 4개는 안됨
		msg["same_4"] = $.i18n.prop('front.message.10009') /* 반복된 문자 4개 이상은 사용불가 합니다. */;

		// 비밀번호 10자리 이하일 경우 3가지 혼용
		if(str.length < 10) {
			patten["except_num"] = /[0-9]/;
			msg["except_num"] = $.i18n.prop('front.message.10010') /* 비밀번호는 8자리 이상은 영문/숫자/특수문자 중 3종류 이상, 10자리 이상은 2종류 이상 혼용하셔야 합니다(영문 대/소문자, 숫자만으로는 사용불가). */;
			patten["except_alpha"] = /[a-zA-Z]/;
			msg["except_alpha"] = $.i18n.prop('front.message.10011') /* 비밀번호는 8자리 이상은 영문/숫자/특수문자 중 3종류 이상, 10자리 이상은 2종류 이상 혼용하셔야 합니다(숫자, 특수문자만으로 사용불가). */;
			patten["except_special"] = /[\!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\＼\]\^\_\`\{\|\}\~]/;
			msg["except_special"] = $.i18n.prop('front.message.10012') /* 비밀번호는 8자리 이상은 영문/숫자/특수문자 중 3종류 이상, 10자리 이상은 2종류 이상 혼용하셔야 합니다(영문 대/소문자, 숫자만으로 사용불가). */;
		}

		var retVal = checkSpace( str );
		if( retVal ) {
			alert($.i18n.prop('front.message.10013') /* 비밀번호는 빈 공간 없이 연속된 영문 대/소문자와 숫자, 특수문자만 사용할 수 있습니다. */);
			return true;
		}

		if(!contCheck(str, 4)) return true;
		if(checkStrCount(str, 4)) {
			alert($.i18n.prop('front.message.10014') /* 연속된 숫자나 문자를 4개이상 사용불가능 합니다. */);
			return true;
		}

		// 패턴 체크
		var i=0;
		for (x in patten)
		{
			p = eval(patten[x]);
			if(!p.test(str))
			{
				ret_msg[i] = msg[x];
				i++;
			}
		}

		if(i>0) {
			alert(ret_msg[0]);
			return true;
		}else{
			return false;
		}
	}else{
		alert($.i18n.prop('front.message.10015') /* 비밀번호를 입력하세요. */);
		return true;
	}
}

function checkSpace( str ) {
	 if(str.search(/\s/) != -1){
		return true;
	 } else {
		return false;
	 }
}

//동일문자가 이어지면 체크
function contCheck(str, num) {
	var i;
	var cnt = 0;
	for( i=1; i < str.length; i++) {
		if(str.substring(i-1,i) == str.substring(i,i+1)) {
			cnt++;
		}
		else {
			cnt = 0;
		}
		if(cnt >= num-1) {
			alert($.i18n.prop('front.message.10016') /* 동일한 문자를 */+num+$.i18n.prop('front.message.10017') /* 번이상 사용불가능 합니다. */);
			return false;
		}
	}
	return true;
}

/***************************************************************
* 연속된 문자 체크
*---------------------------------------------------------------
* value : 체크할 문자열
* cnt   : 체크할 연속된 문자열의 수
* 체크할 연속된 문자열의 수 이상이면 return true
****************************************************************/
function checkStrCount(value, cnt){
	var result  = false;
	var checkStr = ""; // 같은 반복문자 체크(예: aaaa)
	var checkAsc = ""; // 연속된 오름차순 숫자 혹은 문자(예: abcde)
	var checkDesc = ""; // 연속된 내림차순 숫자 혹은 문자(예: edcba)

	for(var z=1; z<cnt; z++){
		checkStr  += "value.charAt(i) == value.charAt(i + " + z + ")";
		checkAsc  += "(value.charCodeAt(i) + " + z + ") == value.charCodeAt(i + " + z + ")";
		checkDesc += "(value.charCodeAt(i) - " + z + ") == value.charCodeAt(i + " + z + ")";
		if(z < cnt - 1){
			checkStr  += " && ";
			checkAsc  += " && ";
			checkDesc += " && ";
		}
	}

	for(var i=0; i<value.length - 3; i++){
		if(eval(checkStr) || eval(checkAsc) || eval(checkDesc)){
			result = true;
		}
	}

	return result;
}

/**
 *
 * @param objType
 * 	F1 : 이미지
 * 	F2 : 문서
 * 	F3 : 플래시
 * 	F4 : 미디어(영상)
 * 	F5 : 이미지/문서
 * 	F6 : 이미지/미디어
 * 	F7 : 미디어(영상, 음원)
 * 	F8 : 이미지/문서/플래시/미디어(영상, 음원)
 * @param objFile
 * 	이미지
 * 		: .gif, .png, .jpg, bmp
 * 		: image/gif, image/png, image/jpeg, image/bmp
 * 	미디어
 * 		: .swf, .flv, .mp3, .wmv, .avi
 * 		: application/x-shockwave-flash, video/x-flv, audio/mpeg, video/x-ms-wmv, video/x-msvideo
 * 	문서
 * 		: .txt, .xls, .doc, .pdf, .ppt, .hwp, .zip
 * 		: text/plain, application/vnd.ms-excel, application/msword, application/pdf, application/vnd.ms-powerpoint, application/hwp, application/zip
 *  플래쉬
 *  	: .swf, .flv
 *  	: application/x-shockwave-flash, video/x-flv
 * @return
 */
function checkFileType(objFile, objType){
	var objFileNm = objFile.toLowerCase();	// 파일명 소문자로 변환
	var returnType = "N";

	switch (objType) {
	case "F1" :
		if(/(\.gif|\.jpg|\.jpeg|\.png)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F2" :
		if(/(\.txt|\.xls|\.doc|\.pdf|\.ppt|\.hwp|\.zip|\.xlsx|\.docx|\.pptx)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F3" :
		if(/(\.swf|\.flv)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F4" :
		if(/(\.mp4|\.flv)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F5" :
		if(/(\.gif|\.jpg|\.jpeg|\.png|\.bmp|\.txt|\.xls|\.doc|\.pdf|\.ppt|\.hwp|\.zip|\.xlsx|\.docx|\.pptx)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F6" :
		if(/(\.gif|\.jpg|\.jpeg|\.png|\.bmp|\.swf|\.flv|\.mp4|\.mp3|\.wmv)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F7" :
		if(/(\.swf|\.flv|\.mp4|\.mp3|\.wmv)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F8" :
		if(/(\.gif|\.jpg|\.jpeg|\.png|\.bmp|\.txt|\.xls|\.doc|\.pdf|\.ppt|\.hwp|\.zip|\.xlsx|\.docx|\.pptx|\.swf|\.flv|\.mp4|\.mp3|\.wmv)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F9" :
		if(/(\.png|\.jpg|\.jpeg|\.zip)$/i.test(objFileNm))	returnType = "Y";
		break;
	case "F10" :
		if(/(\.png|\.jpg|\.jpeg|\.txt|\.xls|\.doc|\.pdf|\.ppt|\.hwp|\.xlsx|\.docx|\.pptx)$/i.test(objFileNm))	returnType = "Y";
		break;
	}
	if(returnType=="Y")	return true;
	else 				return false;
}

/*
 * textbox에 엔터 쳤을때 callback 함수 호출
 */
function fncEnterCallback(callback)
{
    if( event.keyCode == 13 )
    {
        callback();
        return false;
    }
}

function fncDeleteObjectOption(objectId){
	if( typeof $("#" + objectId) != 'undefined' && $("#" + objectId).length > 0 ) {
		var i = 1;
		var objOption = $("#" + objectId).get(0);
		while(i < objOption.length){
			objOption.options[i] = null;
		}
	}
}


/**
 * 최대입력값 체크
 */
function checkOverLength(src, max) {
  //var src = event.srcElement;
  var str = src.value;
  var inputsize = getByteLength_HG(str);

  if (inputsize > max) {

    alert("입력허용길이 " + max + "Byte 를 초과하였습니다.");
    //src.blur()
    //src.focus();
    src.value = cutText(str, max);
    $(src).attr("maxlength", max);
    //return;
  }
}

/**
 * 한글 바이트길이 계산해서 넘겨주는 함수
 */
function getByteLength_HG(s) {
  var len = 0;
  var chk = "";
  var sosi = 0;
  if (s == null)
    return 0;

  for (var i = 0; i < s.length; i++) {
    var c = escape(s.charAt(i));
    if (c.indexOf("%u") != -1) {
      chk += "3";
      len += 2;
    } else if (c.indexOf("%") != -1) {
      chk += "1";
      len++;
    } else if (c.length == 1) {
      chk += "1";
      len++;
    }
  }
  sosi = parseInt(SosiCount(chk));
  return len + sosi;
}

/**
 * 소시카운트 계산해서 넘겨주는 함수
 */
function SosiCount(chk) {
  var hanChk = 0;
  //첫글자가 한글인경우
  if (chk.charAt(0) == '3') {
    hanChk = 1;
  }
  //마지막 글자가 한글인경우
  if (chk.charAt(chk.length - 1) == '3') {
    hanChk += 1;
  }
  //첫글자와 마지막 글자를 제외하고 입력값들중 한글과 영문인경우
  for ( i = 1; i < chk.length - 1; i++) {
    if (i < chk.length) {
      if (chk.charAt(i) + chk.charAt(i + 1) == '13') {
        hanChk += 1;
      }
      if (chk.charAt(i) + chk.charAt(i + 1) == '31') {
        hanChk += 1;
      }
    }
  }
  return hanChk;
}

/**
 * 최대길이만큼만 잘라주는 함수
 */
function cutText(s, max) {
  var len = 0;
  var chk = "";
  var sosi = 0;
  var tmp;
  for (var i = 0; i < s.length; i++) {
    var c = escape(s.charAt(i));
    if (c.indexOf("%u") != -1) {
      chk += "3";
      len += 2;
    } else if (c.indexOf("%") != -1) {
      chk += "1";
      len++;
    } else if (c.length == 1) {
      chk += "1";
      len++;
    }
    sosi = parseInt(SosiCount(chk));
    totallen = len + sosi;
    if (totallen > max) {
      tmp = s.substring(0, i);
      break;
    }
  }
  return tmp;
}

function numberCheck(obj) {
  var strNumber = obj.value;
  if (obj.value.isN()) {
    return;
  }
  if (!strNumber.checkNum()) {
    alert($.i18n.prop('front.message.10500') /* 숫자만 입력이 가능합니다. */);
    obj.value = strNumber.num();
    obj.focus();
  }
}

function numberEngCheck(obj) {
	var strNumberEng = obj.value;
	if (obj.value.isN()) {
		return false;
	}
	
	if (!strNumberEng.isNumEng()) {
		alert($.i18n.prop('front.message.10661') /* 영문 대/소문자 및 숫자만 입력이 가능합니다. */);
		obj.value = strNumberEng.numEng();
		obj.focus();
	}
}

function symNumberCheck(obj) {
  var strNumber = obj.value;
  if (obj.value.isN()) {
    return;
  }
  if (!strNumber.checkSymNum()) {
    alert($.i18n.prop('front.message.10606') /* 숫자,특수문자만 입력이 가능합니다. */);
    obj.value = strNumber.symNum();
    obj.focus();
  }
}

function FormCheck(obj, msg) {
	  var FieldName = obj;
	  var PrintMessage = msg;

	  if (FieldName.value.trim() == "") {
	    alert(PrintMessage);
	    FieldName.focus();
	    return false;
	  }
}

/**
 * 핸드폰, 전화번호 앞자리 체크
 */
function fnSTelCheck(str, flag) {
  var sText = ["0503", "02", "031", "032", "033", "041", "043", "042", "051", "052", "053", "054", "055", "061", "062", "063", "064", "011", "016", "017", "018", "019", "0130", "0502", "0505", "080", "1588", "010", "1544", "1566", "013", "0506", "0303", "1644", "1566", "1544", "1577", "0303", "070", "1688", "070", "0504", "0103", "1599", "1600", "1666", "032", "070"];

  var bCheck = true;
  if (str != '') {
    for (var i = 0; i < sText.length; i++) {
      if (str.trim() == sText[i]) {
        bCheck = false;
      }
    }

    if (bCheck) {
      if (flag == "T") {
        alert("송화인 전화번호의 지역번호 또는 통신사 번호를 정확히 입력해주세요.");
      } else {
        alert("송화인 핸드폰번호의 지역번호 또는 통신사 번호를 정확히 입력해주세요.");
      }
    }
  }
  return bCheck;
}


function isPhoneNumber(po1, po2, po3) {
	  var phonenumber = po1.toString() + po2.toString() + po3.toString();

	  if (phonenumber.isMobile()) {
	    return true;
	  } else {
	    return false;
	  }
}

function fncGlobalShare(channel){
	var snsTitle = $("#snsTitle").val();
	var snsSummary = $("#snsSummary").val();
	var snsUrl = $("#snsUrl").val();
	var snsImage = $("#snsImage").val();
	if(channel == "googleplus"){
		fncShareGooglePlus(snsTitle, snsSummary, snsUrl);
	}else if(channel == "facebook"){
		fncShareFacebook(snsTitle, snsSummary, snsUrl);
	}else if(channel == "kakao"){
		fncShareKakao(snsTitle, snsSummary, snsUrl, snsImage);
	}else if(channel == "weibo"){
		fncShareWeibo(snsTitle, snsUrl, snsImage);
	}else if(channel == "qqzone"){
		fncShareQQzone(snsTitle, snsUrl, snsImage, snsSummary);
	}
}
//공유하기 - 구글+
function fncShareGooglePlus(sharer_title, sharer_content, sharer_URL){
    var sharer_str = encodeURIComponent(sharer_title.replace(/#/gi,"") + sharer_content);
    var sharer_url = encodeURIComponent(sharer_URL);

    var href = "https://plus.google.com/share?url="+ sharer_url +"&t="+ sharer_url;
    var a = window.open(href, "google+", "width=410, height=540, resizable=no");
    if( a ) {
    	a.focus();
    }
}

//공유하기 - 카카오스토리, 카카오톡
function fncShareKakao(sharer_title, sharer_content, sharer_URL, share_image) {
//	var UserAgent = navigator.userAgent;
//	if (UserAgent.match(/iPhone|iPod|iPad|Android|Windows CE|BlackBerry|Symbian|Windows Phone|webOS|Opera Mini|Opera Mobi|POLARIS|IEMobile|lgtelecom|nokia|SonyEricsson/i) != null || UserAgent.match(/LG|SAMSUNG|Samsung/) != null)
//	{

	Kakao.Link.sendDefault({
		objectType: 'feed',
        content: {
			title: sharer_title,
			description: sharer_content,
			imageUrl: share_image,
			link: {
				mobileWebUrl: sharer_URL,
				webUrl: sharer_URL
			}
		},
        buttons: [{
            title: '자세히 보기',
            link: {
				mobileWebUrl: sharer_URL,
				webUrl: sharer_URL
			}
		}]
    });

//	}
//    else
//    {
//	    Kakao.Story.share({
//	      url: sharer_URL,
//	      text: ''	//sharer_title
//	    });
//    }
}

//공유하기 - 페이스북
function fncShareFacebook(sharer_title, sharer_content, sharer_URL){
    var sharer_str = encodeURIComponent(sharer_title.replace(/#/gi,"") + sharer_content);
    var sharer_url = encodeURIComponent(sharer_URL);

    var href = "http://www.facebook.com/sharer.php?u="+ sharer_url +"&t="+ sharer_str;
    var a = window.open(href, "facebook", "width=800, height=500");
    if( a ) {
    	a.focus();
    }
}

//공유하기 - 웨이보
function fncShareWeibo(sharer_URL, sharer_title, share_image){
    var sharer_str = encodeURIComponent(sharer_title.replace(/#/gi,""));
    var sharer_url = encodeURIComponent(sharer_URL);

    var href = "http://service.weibo.com/share/share.php?url="+ sharer_url +"&title="+ sharer_str +"&pic=" + share_image;
    var a = window.open(href, "weibo", "width=800, height=500");
    if( a ) {
    	a.focus();
    }
}

//
function fncShareQQzone(sharer_title, sharer_URL, share_image, sharer_content){
    var sharer_str = encodeURIComponent(sharer_title.replace(/#/gi,""));
    var sharer_url = encodeURIComponent(sharer_URL);

    var href = "https://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title="+ sharer_title +"&url="+ sharer_URL +"&pics=" + share_image + "&summary=" + sharer_content;
    var a = window.open(href, "weibo", "width=800, height=500");
    if( a ) {
    	a.focus();
    }
}

$(document).on('click','.btnUrlCopy',function(e){
			e.preventDefault();
			copyUrl($(this));
		});

function copyUrl(tg){
	var Url = tg.siblings('textarea')[0];
	Url.innerHTML = window.location.href;
	Url.select();
	document.execCommand("copy");
	alert('복사되었습니다');
}

function openPopup(url,title, option){
	window.open(url,title,option);
}

/* 업로드체크*/
function fileCheck(file){
	var maxSize = 2 * 1024 * 1024
	var fileSize = 0 ;
	var browser = navigator.appName;
	if(browser == "Microsoft Internet Explorer") {
		var oas = new ActiveXObject("Scripting.FileSystemObject");
		fileSize = oas.getFile(file.value).size;
	}else{
		fileSize = file.files[0].size;
	}
	if(fileSize > maxSize){
		alert($.i18n.prop('front.message.10612') /* 파일 첨부는 2mb까지 가능합니다. */);
		return false;
	}else{
		return true;
	}
}

function globalBannerManager(lang, keyLocation, targetCd, url, title, pagePopup){
    $.ajax({
    	url: "/"+lang+"/common/bannerListPageJson",
        type: 'POST',
        beforeSend: function (request)
        {
            request.setRequestHeader("X-CSRF-TOKEN", GLOBAL_CSRF_VALUE);
        },
        data: GLOBAL_CSRF_NAME+'='+GLOBAL_CSRF_VALUE+"&keyLocation="+keyLocation,
		dataType: 'json',
		timeout: 1000,
		async: false,
        success:function(data){
        	var banner = data.bannerList[0];
        	if(banner && banner.bannerName){
        		alert(banner.bannerName);
        		return;
        	}

        	if("04" == targetCd){
        		openPopup(url, title, pagePopup);
        	} else if ('02' == targetCd) {
        		var openNewWindow = window.open("about:blank");
        		openNewWindow.location.href = url;
        	} else {
        		location.href = "/"+lang+url;
        	}
        },
        error: function(xhr){
			if(xhr.status=="403"){
				location.href = location.href;
			}
		}
    });
}