define(["ezCtrl"], function(ezCtrl) {

	"use strict";

	// set controller name
	var exports = {
		controller : "controller/COCommonController"
	};

	// 문자열 공백제거 함수 ##################################################
	// Ex) str = " 테 스 트 ".stripspace(); => str = "테스트";
	String.prototype.stripspace = function() {
		return this.replace(/ /g, '');
	};
	
	// get controller object
	var commonCtrl = new ezCtrl.controller(exports.controller);

	// create object function
	var dataObj = null;

	if ( commonCtrl.obj.data != undefined )
	{
		dataObj = commonCtrl.obj.data();
	}
	
	//우편번호
	commonCtrl.Postcode = function(zipcd, adr, sido, sigungu){
	    new daum.Postcode({
	        oncomplete: function(data) {
	            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.
	            // 예제를 참고하여 다양한 활용법을 확인해 보세요.
	        	$('input[name='+zipcd+']').val(data.zonecode);
	        	$('input[name='+adr+']').val(data.roadAddress);

	        	if(sido != undefined) $('input[name='+sido+']').val(data.sido);
	        	if(sigungu != undefined) $('input[name='+sigungu+']').val(data.sigungu);
	        },
	        shorthand : false
	    }).open();		
	};
	
	// input type : number 일때 maxlength가 정상적으로 작동하기 위함.
	// ex) <input type="number" maxlength="6" oninput="commonCtrl.maxLengthCheck(this)"/>
	commonCtrl.maxLengthCheck = function(object)
	{
	    if (object.value.length > object.maxLength) {
		object.value = object.value.slice(0, object.maxLength);
	    }
	};
	

	commonCtrl.pagination = function(pageIndex)
	{
		var url = location.pathname, slideObj = jQuery(".swiper-wrapper .swiper-slide.on");

		if (jQuery(slideObj).length > 0)
		{
			var slideId = jQuery(slideObj).data("hash");

			if (typeof slideId != "undefined")
			{
				url = url + "#" + slideId;
			}
		}

		jQuery("#pageIndex").val(pageIndex);
		jQuery("#frm_search").attr("action", url).submit();
	};

	commonCtrl.setViewPage = function(field, seq, url)
	{
		jQuery("#frm_search").find("input[name='" + field + "']").val(seq);

		var slideObj = jQuery(".swiper-wrapper .swiper-slide.on");

		if (jQuery(slideObj).length > 0)
		{
			var slideId = jQuery(slideObj).data("hash");

			if (typeof slideId != "undefined")
			{
				url = url + "#" + slideId;
			}
		}

		jQuery("#frm_search").attr("action", url).submit();
	};	
	
	commonCtrl.popData = function(){
		// 메인 팝업 스와이퍼
		var mainPopSwiper = new Swiper('.mainPop .popBody.swiper-container', {
			slidesPerView: 'auto',
			 pagination: {
				el: '.swiper-pagination',
				clickable: true,
				type: 'fraction',
			},
			navigation: {
				nextEl: '.swiper-button-next',
				prevEl: '.swiper-button-prev',
			},
		});
		if($(".mainPop .swiper-slide").size() < 2){
			mainPopSwiper.allowSlidePrev = false;
			mainPopSwiper.allowSlideNext = false;
			$(".mainPop .swiper-button-prev, .mainPop .swiper-button-next").hide();
			$(".mainPop .swiper-pagination").hide();

		};	
	}

	commonCtrl.checkbox = {
		allClass : ".checkbox_all",
		singleClass : ".checkbox_single",
		allClick : function($this) {
			if ($this.is(":checked"))
			{
				jQuery(this.singleClass).prop("checked", true);
				jQuery(this.singleClass).closest("div").addClass("on");
			}
			else
			{
				jQuery(this.singleClass).prop("checked", false);
				jQuery(this.singleClass).closest("div").removeClass("on");
			}
		},
		singleClick : function() {
			var allChkCnt = jQuery(this.singleClass).length;
			var selChkCnt = jQuery(this.singleClass + ":checked").length;

			if (allChkCnt == selChkCnt)
			{
				jQuery(this.allClass).prop("checked", true);
				jQuery(this.allClass).closest("div").addClass("on");
			}
			else
			{
				jQuery(this.allClass).prop("checked", false);
				jQuery(this.allClass).closest("div").removeClass("on");
			}
		}
	};

	commonCtrl.extnCheck = function(obj, extns, maxSize)
	{
		var brwtype = jQuery("#cBody").data("brwtype");

		var trgtObj1 = jQuery(obj).closest("#fileTopForm");

		var fileAppdCnt = parseInt(jQuery(trgtObj1).data("fileAppdCnt"), 10);
		var fileLngth = parseInt(jQuery(trgtObj1).data("fileLngth"), 10);
		var delFileLngth = (brwtype == 'mbl' ? jQuery(this).closest(".fileDiv").find("a").length : jQuery(trgtObj1).find("input:checkbox[name^='del']:checked").length);

		var isFile = true, fileName;

		if (fileAppdCnt <= (fileLngth - delFileLngth))
		{
			var msg = brwtype == 'mbl' ? "첨부 가능한 파일 수를 초과하였습니다.\n원본 파일 삭제 후 진행해주세요." : "첨부 가능한 파일 수를 초과하였습니다.\n원본 파일 check 후 진행해주세요.";
			alert(msg);
			isFile = false;
		}
		else
		{
			fileName = jQuery(obj).val();

			if (fileName)
			{
				var fileExtn = fileName.substr(fileName.lastIndexOf(".") + 1);

				if (extns.indexOf(fileExtn.toLowerCase()) < 0)
				{
					alert("지원하지 않는 파일확장자입니다.");
					isFile = false;
				}
				else
				{
					//IE9 이하는 지원을 안함. IE9 이하는 서버단에서 체크
					if (typeof obj.files != "undefined")
					{
						var fileSize = obj.files[0].size;
						var maxFileSize = maxSize * 1024 * 1024;

						if (fileSize > maxFileSize)
						{
							alert("파일 용량을 초과하였습니다.");
							isFile = false;
						}
					}
				}
			}
		}

		var trgtObj2 = jQuery(obj).closest("p");

		if (!isFile)
		{
			jQuery(trgtObj2).children().not(".btn_srch_file").remove();

			jQuery(trgtObj2).append(jQuery(obj).clone(true).val(""));
		}
		else
		{
			//경로 뺀 파일명과 확장자
			var fileValue = fileName.split("\\");
			var fileNm = fileValue[fileValue.length-1];

			if(brwtype == 'mbl')
			{
				jQuery(obj).siblings("a").trigger("click");
			}
			else
			{
				jQuery(trgtObj2).prev().val(fileNm);
			}
		}
	};

	commonCtrl.fnChkByte = function(obj, maxByte, $cByteObj)
	{
		var str = obj.value
		  , str_len = str.length
		  , rbyte = 0
		  , rlen = 0
		  , one_char = ""
		  , str2 = "";

		for ( var i = 0; i < str_len; i++ )
		{
			one_char = str.charAt(i);

			if ( escape(one_char).length > 4 )
			{
				rbyte += 2;				// 한글 2Byte
			}
			else
			{
				rbyte++;				// 영문 등 나머지 1Byte
			}

			if (rbyte <= maxByte)
			{
				rlen = i + 1;			// return할 문자열 갯수
			}
		}

		if ( rbyte > maxByte )
		{
			alert("한글 " + (maxByte / 2) + "자 / 영문 " + maxByte + "자를 초과 입력할 수 없습니다.");
			str2 = str.substr(0, rlen); // 문자열 자르기
			obj.value = str2;

			commonCtrl.fnChkByte(obj, maxByte, $cByteObj);
		}
		else
		{
			$cByteObj.text(rbyte);
		}
	};

	commonCtrl.startAjax = function(config)
	{
		jQuery(".blackBg").stop().fadeIn(100);
		jQuery(".ajaxLoader").stop().fadeIn(200);
		jQuery(".ajaxLoader").css("position","absolute");
		jQuery(".ajaxLoader").css("top",  $(window).height() / 2 - $(".ajaxLoader img").height() / 2 );
		jQuery(".ajaxLoader").css("left", $(window).width() / 2 - $(".ajaxLoader img").width() / 2 );		
		jQuery(".ajaxLoader").focus();
	};
	
	commonCtrl.completeAjax = function()
	{
		setTimeout(function(){
			jQuery(".ajaxLoader").last().stop().fadeOut(200);
			jQuery(".blackBg").stop().fadeOut(200);	
		}, 700);		
	};
	
	// 쿠키 생성하기
	commonCtrl.setCookie = function(cName, cValue, cDay) {
	   var expire = new Date();
	   
	   expire.setDate(expire.getDate() + cDay);
	   
	   // 한글 깨짐을 막기위해 escape(cValue)를 합니다.
	   var cookies = cName + "=" + escape(cValue) + "; path=/ ";
	   
	   if (typeof cDay != "undefined") 
	   {
		   cookies += ";expires=" + expire.toGMTString() + ";";
	   }
	   document.cookie = cookies;
	};
	
	// 쿠키 가져오기
	commonCtrl.getCookie = function(strName) {
		
		var rtn = "";
		var strCookieName = strName + "=";
		var objCookie = document.cookie;
		
		if (objCookie.length > 0) 
		{
			var nBegin = objCookie.indexOf(strCookieName);
				
			if (nBegin < 0) 
			{
				return rtn;
			}

			nBegin += strCookieName.length;
			
			var nEnd = objCookie.indexOf(";", nBegin);

			if (nEnd == -1)
			{
			    nEnd = objCookie.length;
			}
		}
		
		return unescape(objCookie.substring(nBegin, nEnd));		
	};
	
	/**
	 * 사용자 첨부파일
	 * AJY
	 * @param file 파일 Object
	 * @param exts 허용 파일 확장자
	 * @param size 허용 파일 크기
	 * @param cnt  첨부파일 갯수 제한 값
	 */ 
	commonCtrl.fnFileCheck = function(file, exts, size, cnt) {
		var agent = navigator.userAgent.toLowerCase();
		var isFile = true;
		
		//파일 업로드 허용 갯수 체크
		if ($(".fileAdd") && $(".fileAdd").length > cnt) {
			alert("등록 할 수 있는 첨부파일 갯수는 " + cnt + "개입니다. 삭제 후 등록해주세요.");
			file.focus();
			isFile = false;
		}
		//파일 업로드 허용 확장자 체크
		var exts = exts.replace("[", '').replace("]", '');

		if (!commonCtrl.checkFileExt(file, exts, "허용되지 않는 파일 확장자입니다." ))
		{
			isFile = false;
		}
		
		//파일명 확인
		if (!commonCtrl.isFileNmCheck(file))
		{
			alert("특수문자는 사용할 수 없습니다.");
			file.focus();
			isFile = false;
		}

		if ( (navigator.appName == 'Netscape' && agent.indexOf('trident') != -1) || (agent.indexOf("msie") != -1)) 
		{
			// ie 일때 input[type=file] init.
		} 
		else 
		{ // other browser 일때 input[type=file] init.
			//파일 업로드 허용 크기 체크
			if (!commonCtrl.fileSizeCheck(file, size)) 
			{
				alert(size + "Mb 이하만 첨부하실 수 있습니다.");
				file.focus();
				isFile = false;
			}
	   	}

		if(isFile)
		{
			if($(".fileAdd"))
			{
				var fileSeq = $(".fileAdd").last().attr("fileseq");
				if (typeof $(".fileAdd").last().attr("fileseq") == "undefined"){
					fileSeq = 1;
				}
				
				//파일명 줄이기
				var fidx = file.value.lastIndexOf('\\') + 1;
				var filename = file.value.substr(fidx, file.value.length);
				
				//첨부파일 이름 화면표시
				var fileNmAdd = "<a href=\"javascript:commonCtrl.delFileDown(" + fileSeq + ")\" id=\"atchFileList"+fileSeq+"\" class=\"smallRound wht\"><span>"+filename+"</span></a>";
				jQuery("#fileAddResultDiv").append(fileNmAdd);
				
			   	fileSeq = parseInt(fileSeq)+1;
			   	$(file).after($(file).clone(true).val("").attr("id","atchFile" + fileSeq).attr("fileSeq", fileSeq).attr("name","atchFile" + fileSeq).attr("fileSeq", fileSeq));
			   	
			   	if ( (navigator.appName == 'Netscape' && agent.indexOf('trident') != -1) || (agent.indexOf("msie") != -1)) {
					// ie 일때 input[type=file] init.
		   		} else { // other browser 일때 input[type=file] init.
		   			$("#atchFile" + fileSeq).val("");
			   	}
			}
		}
		else
		{
			if ( (navigator.appName == 'Netscape' && agent.indexOf('trident') != -1) || (agent.indexOf("msie") != -1)) 
			{
				// ie 일때 input[type=file] init.
				//var fileClone = $(file).clone(true);
				jQuery(file).replaceWith( jQuery(file).clone(true) );
	   		} 
			else 
			{ 
	   			// other browser 일때 input[type=file] init.
	   			$(file).val("");
		   	}
		}
	}
	
	//첨부파일 삭제
	commonCtrl.delFileDown = function(fileSeq){
		if(confirm("첨부파일을 삭제하시겠습니까?")) {
			$("#atchFile" + fileSeq).remove();
			$("#atchFileList" + fileSeq).remove();
		}
	};

	// 파일 확장자 ##################################################
	commonCtrl.getFileExt = function(value) {
		if (value != '') {
			var fidx = value.lastIndexOf('\\') + 1;
			var filename = value.substr(fidx, value.length);
			var eidx = filename.lastIndexOf('.') + 1;

			return filename.substr(eidx, filename.length);
		}
	};

	// 파일확장자 확인 ##################################################
	commonCtrl.checkFileExt = function(obj, exts, errMsg) {
		var arrExt = exts.toLowerCase().split(',');
		var result = false;
		if (obj.value.stripspace() != '') {
			var ext = commonCtrl.getFileExt(obj.value).toLowerCase();
			for (var i = 0; i < arrExt.length; i++) {
				if (arrExt[i].trim() == ext)
					result = true;
			}
		}
		if (!result) {
			//alert(errMsg);
			obj.focus();
			return false;
		}
		return true;
	};

	// 파일 크기 체크
	commonCtrl.fileSizeCheck = function(file, size) {
		// 사이즈체크
		var maxSize = 1024 * 1024 * size
		var fileSize = 0;
		var result = true;

		var agent = navigator.userAgent.toLowerCase();
		if ( (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (agent.indexOf("msie") != -1) ){
			var oas = new ActiveXObject("Scripting.FileSystemObject");
			fileSize = oas.getFile(file.value).size;
		}
		// 익스플로러가 아닐경우
		else {
			fileSize = file.files[0].size;
		}
		if (fileSize > maxSize) {
			result = false;
		}
		return result;
	};

	//파일명 확인 ##################################################
	commonCtrl.isFileNmCheck = function(obj) 
	{
		var result = false;
		if (obj.value.stripspace() != '')
		{
			var fileValue = obj.value.split("\\");
			var fileName = fileValue[fileValue.length-1]; // 파일명
			//공백체크
			var blank_pattern = /[\s]/g;
			if(blank_pattern.test(fileName) == true)
			{
				return false;
			}
			//특수문자 체크
			var special_pattern = /[`~!@#$%^&*|\\\'\";:\/?]/gi;
			if(special_pattern.test(fileName) == true)
			{
				return false;
			}
		}
		if (result) 
		{
			return false;
		}
		return true;
	};
	
	commonCtrl.product = function() {
		/*var ArrProducts = [
			{ title:"데일리C 레몬1000C+ 스파클링", imgSrc:"/common/images/t1List1.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"마운틴듀", imgSrc:"/common/images/t1List2.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"미린다", imgSrc:"/common/images/t1List3.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"밀키스", imgSrc:"/common/images/t1List4.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"오랑지나", imgSrc:"/common/images/t1List5.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"칠성사이다", imgSrc:"/common/images/lyPopProd_t1List6.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"칠성 스트롱 사이다", imgSrc:"/common/images/t1List7.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"트레비", imgSrc:"/common/images/t1List8.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"펩시콜라", imgSrc:"/common/images/t1List9.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"클라우드 클리어 제로", imgSrc:"/common/images/t1List10.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
			, { title:"트로피카나 스파클링", imgSrc:"/common/images/t1List11.jpg", desc:"반세기 넘게 지켜온 맑고 깨끗함" }
		];*/

		$('.subBody .productDiv .allPdViewDiv .list').each(function(idx){

			if (ArrProducts != undefined && $.isArray(ArrProducts)) {
				var product = ArrProducts[idx];
				if (product != undefined) {
					$(this).click(function() {
						$(".lyPopProd")
								.find(".tit").html(product.title).end()
								.find(".txt").html(product.desc).end()
								.find("img:first").attr("src", product.imgSrc);
						
							if(product.newData01 != undefined && product.newData01.length > -1){
								$(".alcohol_data").show();
								$(".lyPopProd")
									.find(".newData01").html(product.newData01).end()
									.find(".newData02").html(product.newData02).end()
									.find(".newData03").html(product.newData03).end()
									.find(".newData04").html(product.newData04).end()
									.find(".newData05").html(product.newData05).end()
									.find(".newData06").html(product.newData06).end()
							}						
						});
					}
				}
			});
		
		$(".lyPopProd .lypopClose").click(function(){				
			$(this).closest(".lyPopProd").find(".scrollBox .img img").removeAttr("src");
		})
	}
	
	//쿠키를 이용한 실시간 주가 적용 
	commonCtrl.getStockInfo = function() {
		var  expireCookieDate;
		
		var expireCookieDate = new Date();
		expireCookieDate.setTime(expireCookieDate.getTime() + (30 * 1000));
		
		var curJuka = $.cookie("curJuka");
		
		if (!!curJuka) {
			// 값이 존재할때.....
			_build();
		} else {
			// 값이 없기 때문에 가져와야 한다.
			$.ajax({
				url:'/' + $('body').data('drvNm') + '/invest/stockinfo/stock/info.ajax',
				success:function(r_) {
					//r => {"DungRakRate":"2.62","Debi":"38,000","CurJuka":"1,488,000","DungRak":"2"}
					var r = JSON.parse(r_);
					if (r != undefined && r.DungRakRate != undefined) {
						$.cookie("curJuka", r.CurJuka, {path: "/", expires: expireCookieDate});//, secure: true});
						$.cookie("debi", r.Debi, {path: "/", expires: expireCookieDate});//, secure: true});
						$.cookie("dungRak", r.DungRak, {path: "/", expires: expireCookieDate});//, secure: true});
						$.cookie("dungRakRate", r.DungRakRate, {path: "/", expires: expireCookieDate});//, secure: true});
					}
					_build();
				}
			});
		}
		function _build() {
			var curJuka
			, debi
			, dungRak
			, dungRakRate;
			curJuka = $.cookie("curJuka");
			debi = $.cookie("debi");
			dungRak = $.cookie("dungRak");
			dungRakRate = $.cookie("dungRakRate");		
			
			var $stockObj = $(".stockD");
			var updownClass = "";
				
				switch (dungRak) {
				case "1":
					updownClass = "up";
					break;
					
				case "2":
					dungRakRate = "+"+dungRakRate;
					updownClass = "up";					
					break;
					
				case "4":
					dungRakRate = "-"+dungRakRate;
					updownClass = "down";
					break;
					
				case "5":
					updownClass = "down";
					break;

				default:
					break;
				}

			$stockObj
				.find(".s1")
					.text(curJuka)
				.end()
				.find(".s2").removeClass("up").removeClass("down")
					.addClass(updownClass)
					.text(debi + " (" + dungRakRate + " %)")
					.end();
			
		}
	}

	// set model
	commonCtrl.model = {
		id : {
			btn_search : {
				event : {
					click : function() {
						commonCtrl.pagination(1);
					}
				}
			},
			btn_refresh : {
				event : {
					click : function() {
						location.href = location.pathname;
					}
				}
			},
			btn_prv_artcl : {
				event : {
					click : function () {
						var prvSeq = jQuery(this).data("prvSeq");

						if ( prvSeq )
						{
							var fltrArr = dataObj.strPam.split("&").filter(function(i){
								return i.indexOf("detailsKey=") < 0
							});

							fltrArr.push("detailsKey=" + prvSeq);

							location.href = "./view.do?" + fltrArr.join("&") + location.hash;
						}
					}
				}
			},
			btn_nxt_artcl : {
				event : {
					click : function () {
						var nxtSeq = jQuery(this).data("nxtSeq");
						if ( nxtSeq )
						{
							var fltrArr = dataObj.strPam.split("&").filter(function(i){
								return i.indexOf("detailsKey=") < 0
							});

							fltrArr.push("detailsKey=" + nxtSeq);

							location.href = "./view.do?" + fltrArr.join("&") + location.hash;
						}
					}
				}
			},
			btn_one_delete : {
				event : {
					click : function() {
						if (confirm("삭제하시겠습니까?"))
						{
							jQuery("form[name='frm']").attr("action", "./delete.do").submit();
						}
					}
				}
			},
			btn_delete : {
				event : {
					click : function() {
						var trgtObjs = jQuery("input:checkbox[name='detailsKey']:checked");

						if (jQuery(trgtObjs).length > 0)
						{
							var msg = "삭제하시겠습니까?";

							if (confirm(msg))
							{
								jQuery("form[name='frm']").attr("action", "./delete.do").submit();
							}
						}
						else
						{
							alert("삭제할 대상을 선택하세요.");
							return;
						}
					}
				}
			}
		},
		classname : {
			checkbox_all : {
				event : {
					click : function() {
						commonCtrl.checkbox.allClick($(this));
					}
				}
			},
			checkbox_single : {
				event : {
					click : function() {
						commonCtrl.checkbox.singleClick();
					}
				}
			},
			btn_file_plus : {
				event : {
					click : function() {
						var brwtype = jQuery("#cBody").data("brwtype");
						var addMblFileLngth = jQuery(this).closest(".fileDiv").children(".fileList").find("a").length;
						var addFileLngth = brwtype == 'mbl' ? addMblFileLngth : jQuery(this).closest("#fileTopForm").find("input[type='file']").length;
						var fileAppdCnt = jQuery(this).closest("#fileTopForm").data("fileAppdCnt");

						var isFileAppd = true;

						if (jQuery("#frm_inquiry").data("actionType") == "insert")
						{
							if (addFileLngth >= fileAppdCnt)
							{
								isFileAppd = false;
							}
						}
						else
						{
							var fileLngth = jQuery(this).closest("#fileTopForm").data("fileLngth");
							var delFileLngth = (brwtype == 'mbl' ? addMblFileLngth : jQuery(this).closest("#fileTopForm").find("input:checkbox[name^='del']:checked").length);

							if (addFileLngth >= (fileAppdCnt - fileLngth + delFileLngth))
							{
								isFileAppd = false;
							}
						}

						if(jQuery("#atchFile").val() != '')
						{
							if (isFileAppd)
							{
								if(brwtype == 'mbl')
								{
									var fileName = jQuery(this).prev().val();
									var fileValue = fileName.split("\\");
									var fileNm = fileValue[fileValue.length-1];
	
									var fileDiv = jQuery(this).closest(".fileDiv");
	                                var addFile = '<a href=\"javascript:\" class=\"fileBt btn_minus\" data-btn-seq="-1"><span>'+fileNm+'</span></a>';
	
									jQuery(fileDiv).children(".fileList").append(addFile);
	
									jQuery(fileDiv).children(".fileChoice:last")
									.after(jQuery(fileDiv).children(".fileChoice:first").clone(true).find("input").val("").end());
	
									jQuery(fileDiv).children(".fileChoice:first").hide();
	
									//파일 name setting
									var idxObj = jQuery(this).closest("div");
	
									jQuery(idxObj).data("index", jQuery(idxObj).data("index") + 1);
	
									var fileObj = jQuery(fileDiv).children(".fileChoice:last").find("input[type='file']");
	
									jQuery(fileObj).attr("id", jQuery(fileObj).attr("id") + jQuery(idxObj).data("index"));
									jQuery(fileObj).attr("name", jQuery(fileObj).attr("name") + jQuery(idxObj).data("index"));
									jQuery(fileObj).data("fileSeq", jQuery(fileObj).data("fileSeq") + jQuery(idxObj).data("index"));
									jQuery(".fileList").children("a:last").data("btnSeq", jQuery(".fileList").children("a:last").data("btnSeq") + jQuery(idxObj).data("index"));
	
									if(addMblFileLngth == 1)
									{
										jQuery(fileDiv).children(".fileChoice:last").remove();
									}
								}
								else
								{
									jQuery(this).closest("#fileMidForm").children(".fileDiv:last")
												.after(jQuery(this).closest("#fileMidForm").children(".fileDiv:first").clone(true).find("input").val("").end().addClass("mt10"));
	
									//파일 name setting
									var idxObj = jQuery(this).closest("div");
	
									jQuery(idxObj).data("index", jQuery(idxObj).data("index") + 1);
	
									var fileObj = jQuery(this).closest("#fileMidForm").children(".fileDiv:last").find("input[type='file']");
	
									jQuery(fileObj).attr("id", jQuery(fileObj).attr("id") + jQuery(idxObj).data("index"));
									jQuery(fileObj).attr("name", jQuery(fileObj).attr("name") + jQuery(idxObj).data("index"));
								}
							}
							else
							{
								alert("첨부 가능한 파일 수는 " + fileAppdCnt + "개 입니다.");
							}
						}
						else
						{
							return false;
						}
					}
				}
			},
			btn_file_minus : {
				event : {
					click : function() {
						var trgtIndex = jQuery(this).closest("#fileMidForm").children(".fileDiv").index(jQuery(this).closest(".fileDiv"));

						if (trgtIndex == 0)
						{
							var addFileLngth = jQuery(this).closest("#fileMidForm").find("input[type='file']").length;

							if (addFileLngth == 1)
							{
								jQuery(this).closest("#fileMidForm").children(".fileDiv:last")
										    .after(jQuery(this).closest(".fileDiv").clone(true).find("input").val("").end()).remove();
							}
							else
							{
								jQuery(this).closest("#fileMidForm").children(".fileDiv:last").remove();
							}
						}
						else
						{
							jQuery(this).closest(".fileDiv").remove();
						}
					}
				}
			},
			cbox_del_file : {
				event : {
					change : function() {
						if (!jQuery(this).is(":checked"))
						{
							var trgtObj = jQuery(this).closest("#fileTopForm");

							var fileAppdCnt = parseInt(jQuery(trgtObj).data("fileAppdCnt"), 10);
							var fileLngth = parseInt(jQuery(trgtObj).data("fileLngth"), 10);
							var addFileLngth = jQuery(trgtObj).find("input[type='file']").length;
							var delFileLngth = jQuey(trgtObj).find("input:checkbox[name^='del']:checked").length;

							if (addFileLngth > (fileAppdCnt - fileLngth + delFileLngth))
							{
								jQuery(trgtObj).find(".btn_file_minus:last").trigger("click");
							}
						}
					}
				}
			},
			calenInput : {
				event : {
					click : function () {
						jQuery(this).children("a").addClass('on');
					}
				}
			},
			todayPopup : {
				event: {
					click : function(){
						//메인 팝업.
						var isChk = jQuery("#chk01").is(":checked");
						if(isChk){
							commonCtrl.setCookie('mainPopCookie', 'false', 1);
						}
						else
						{
							commonCtrl.setCookie('mainPopCookie', 'true', 1);
						}
						jQuery(".mainPop").css("display","none");		
					}
				}
			}
		},
		immediately : function() {
			window.commonCtrl = commonCtrl;
			
			jQuery("body").click( function(e) {
				if( !jQuery(e.target).hasClass("calenBt"))
				{
					if(jQuery("#termStartDate").val() == '')
					{
						jQuery(".calenBt:first").removeClass("on");
					}
					if(jQuery("#termEndDate").val() == '')
					{
						jQuery(".calenBt:last").removeClass("on");
					}
				}
			});
			
			//팝업 쿠키 조회.
			var mainPopCookie = commonCtrl.getCookie('mainPopCookie');
			
			if(mainPopCookie != "false"){
				jQuery(".mainPop").css("display","block");
				commonCtrl.popData();
			}

			//제품관련
			commonCtrl.product();
			commonCtrl.getStockInfo();

			//현재 메뉴 오픈
			$(".header .mGnbOpen").click(function() {
				$("#mGnb .oneD.active").closest(".dep").addClass("on").find(".twoD").show().find(".active").addClass("on").next().show();
				//setTimeout(function() {$("#mGnb .oneD.active").trigger("click").next().find("a.active").trigger("click");}, 500);
			});

		}
	};

	// execute model
	commonCtrl.exec();

	return commonCtrl;
});